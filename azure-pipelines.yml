pool: fadi-pool

variables:
  - name: MAVEN_CACHE_FOLDER
    value: $(HOME)/.m2/repository
  - name: MAVEN_OPTS
    value: -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)
  - name: JACOCO_CODECOVERAGE
    value: $(System.DefaultWorkingDirectory)/core/target/site/jacoco/jacoco.xml

stages:
  - stage: BuildAndTest
    displayName: Build and Test Application
    jobs:
      - job: BuildAndTestJob
        displayName: Build and Test Job
        pool:
          name: fadi-pool  # This references your hosted runner
        steps:
          - checkout: self
            persistCredentials: true
            clean: true
            fetchDepth: 0

          # Set up Maven repo cache
          - task: Cache@2
            displayName: Cache Maven Local Repo
            inputs:
              key: maven | "$(Agent.OS)" | **/pom.xml
              path: $(MAVEN_CACHE_FOLDER)
              restoreKeys: |
                maven | "$(Agent.OS)"
                maven

          - task: SonarQubePrepare@6
            inputs:
              SonarQube: 'sonarr'
              scannerMode: 'Other'
              configMode: file
              extraProperties: |
                sonar.projectKey=my-azure-devops-project_my-azure-devops-project_AZK0yBzzKN4gu2Kgjo-i
                sonar.projectName=my-azure-devops-project
                sonar.language=java
                sonar.sourceEncoding=UTF-8
                sonar.test=core/src/test/**
                sonar.java.binaries=.
                sonar.coverage.jacoco.xmlReportPaths=$(JACOCO_CODECOVERAGE)

          # Perform Maven build
          - task: Maven@4
            displayName: Maven Build
            inputs:
              goals: '-B package'
              publishJUnitResults: true
              mavenOpts: '-Xmx2048m $(MAVEN_OPTS)'
              sonarQubeRunAnalysis: true

          - task: SonarQubePublish@6
            inputs:
              pollingTimeoutSec: '300'

          - task: PublishCodeCoverageResults@2
            inputs:
              summaryFileLocation: '$(JACOCO_CODECOVERAGE)'
              failIfCoverageEmpty: true
