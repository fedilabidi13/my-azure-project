pool:
  name: fadi-pool

steps:
# Step 1: Check Maven and Java versions
- script: |
    echo "Checking Maven version:"
    mvn -v
    echo "Checking Java version:"
    java -version
  displayName: 'Check Maven and Java Versions'

# Step 2: Prepare SonarQube for Code Quality Analysis
- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'sonarr'  # SonarQube service connection name
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'my-azure-devops-project_my-azure-devops-project_AZK0yBzzKN4gu2Kgjo-i'
    cliProjectVersion: '1.0'
    extraProperties: |
      sonar.java.binaries=target/classes
      sonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
  displayName: 'Prepare SonarQube for Code Quality Analysis'

# Step 3: Modify SONARQUBE_SCANNER_PARAMS to remove sonar.branch.name
- script: |
    echo "Modifying SONARQUBE_SCANNER_PARAMS to remove sonar.branch.name"
    decoded_params=$(echo $SONARQUBE_SCANNER_PARAMS | base64 --decode)
    modified_params=$(echo $decoded_params | jq 'del(.["sonar.branch.name"])')
    export SONARQUBE_SCANNER_PARAMS=$(echo $modified_params | base64)
  displayName: 'Remove sonar.branch.name from SONARQUBE_SCANNER_PARAMS'

# Step 4: Build the Java project and generate JaCoCo code coverage report
- script: |
    mvn clean verify jacoco:report
  displayName: 'Build Java App with Maven and Generate JaCoCo Report'

# Step 5: Execute SonarQube analysis
- task: SonarQubeAnalyze@5
  displayName: 'Run SonarQube Analysis'

# Step 6: Publish JaCoCo Code Coverage Results
- task: PublishCodeCoverageResults@2
  inputs:
    codeCoverageTool: 'JaCoCo'
    summaryFileLocation: 'target/site/jacoco/jacoco.xml'
    reportDirectory: 'target/site/jacoco'
    failIfCoverageEmpty: true
  displayName: 'Publish JaCoCo Code Coverage Results'
